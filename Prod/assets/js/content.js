const awsuiIconURL = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" focusable="false" aria-hidden="true">\t<path d="M16.469,8.924l-2.414,2.413c-0.156,0.156-0.408,0.156-0.564,0c-0.156-0.155-0.156-0.408,0-0.563l2.414-2.414c1.175-1.175,1.175-3.087,0-4.262c-0.57-0.569-1.326-0.883-2.132-0.883s-1.562,0.313-2.132,0.883L9.227,6.511c-1.175,1.175-1.175,3.087,0,4.263c0.288,0.288,0.624,0.511,0.997,0.662c0.204,0.083,0.303,0.315,0.22,0.52c-0.171,0.422-0.643,0.17-0.52,0.22c-0.473-0.191-0.898-0.474-1.262-0.838c-1.487-1.485-1.487-3.904,0-5.391l2.414-2.413c0.72-0.72,1.678-1.117,2.696-1.117s1.976,0.396,2.696,1.117C17.955,5.02,17.955,7.438,16.469,8.924 M10.076,7.825c-0.205-0.083-0.437,0.016-0.52,0.22c-0.083,0.205,0.016,0.437,0.22,0.52c0.374,0.151,0.709,0.374,0.997,0.662c1.176,1.176,1.176,3.088,0,4.263l-2.414,2.413c-0.569,0.569-1.326,0.883-2.131,0.883s-1.562-0.313-2.132-0.883c-1.175-1.175-1.175-3.087,0-4.262L6.51,9.227c0.156-0.155,0.156-0.408,0-0.564c-0.156-0.156-0.408-0.156-0.564,0l-2.414,2.414c-1.487,1.485-1.487,3.904,0,5.391c0.72,0.72,1.678,1.116,2.696,1.116s1.976-0.396,2.696-1.116l2.414-2.413c1.487-1.486,1.487-3.905,0-5.392C10.974,8.298,10.55,8.017,10.076,7.825"></path></svg>', awsuiIconJSON = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 58 58" style="enable-background:new 0 0 58 58;" xml:space="preserve"> <g> <path d="M50.949,12.187l-1.361-1.361l-9.504-9.505c-0.001-0.001-0.001-0.001-0.002-0.001l-0.77-0.771 C38.957,0.195,38.486,0,37.985,0H8.963C7.776,0,6.5,0.916,6.5,2.926V39v16.537V56c0,0.837,0.841,1.652,1.836,1.909 c0.051,0.014,0.1,0.033,0.152,0.043C8.644,57.983,8.803,58,8.963,58h40.074c0.16,0,0.319-0.017,0.475-0.048 c0.052-0.01,0.101-0.029,0.152-0.043C50.659,57.652,51.5,56.837,51.5,56v-0.463V39V13.978C51.5,13.211,51.407,12.644,50.949,12.187 z M39.5,3.565L47.935,12H39.5V3.565z M8.963,56c-0.071,0-0.135-0.025-0.198-0.049C8.61,55.877,8.5,55.721,8.5,55.537V41h41v14.537 c0,0.184-0.11,0.34-0.265,0.414C49.172,55.975,49.108,56,49.037,56H8.963z M8.5,39V2.926C8.5,2.709,8.533,2,8.963,2h28.595 C37.525,2.126,37.5,2.256,37.5,2.391V13.78c-0.532-0.48-1.229-0.78-2-0.78c-0.553,0-1,0.448-1,1s0.447,1,1,1c0.552,0,1,0.449,1,1v4 c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1s0.447,1,1,1 c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.103,0-2-0.897-2-2v-4 c0-0.771-0.301-1.468-0.78-2h11.389c0.135,0,0.265-0.025,0.391-0.058c0,0.015,0.001,0.021,0.001,0.036V39H8.5z"/> <path d="M16.354,51.43c-0.019,0.446-0.171,0.764-0.458,0.95s-0.672,0.28-1.155,0.28c-0.191,0-0.396-0.022-0.615-0.068 s-0.429-0.098-0.629-0.157s-0.385-0.123-0.554-0.191s-0.299-0.135-0.39-0.198l-0.697,1.107c0.183,0.137,0.405,0.26,0.67,0.369 s0.54,0.207,0.827,0.294s0.565,0.15,0.834,0.191s0.504,0.062,0.704,0.062c0.401,0,0.791-0.039,1.169-0.116 c0.378-0.077,0.713-0.214,1.005-0.41s0.524-0.456,0.697-0.779s0.26-0.723,0.26-1.196v-7.848h-1.668V51.43z"/> <path d="M25.083,49.064c-0.314-0.228-0.654-0.422-1.019-0.581s-0.702-0.323-1.012-0.492s-0.569-0.364-0.779-0.588 s-0.314-0.518-0.314-0.882c0-0.146,0.036-0.299,0.109-0.458s0.173-0.303,0.301-0.431s0.273-0.234,0.438-0.321 s0.337-0.139,0.52-0.157c0.328-0.027,0.597-0.032,0.807-0.014s0.378,0.05,0.506,0.096s0.226,0.091,0.294,0.137 s0.13,0.082,0.185,0.109c0.009-0.009,0.036-0.055,0.082-0.137s0.101-0.185,0.164-0.308s0.132-0.255,0.205-0.396 s0.137-0.271,0.191-0.39c-0.265-0.173-0.61-0.299-1.039-0.376s-0.853-0.116-1.271-0.116c-0.41,0-0.8,0.063-1.169,0.191 s-0.692,0.313-0.971,0.554s-0.499,0.535-0.663,0.882S20.4,46.13,20.4,46.576c0,0.492,0.104,0.902,0.314,1.23 s0.474,0.613,0.793,0.854s0.661,0.451,1.025,0.629s0.704,0.355,1.019,0.533s0.576,0.376,0.786,0.595s0.314,0.483,0.314,0.793 c0,0.511-0.148,0.896-0.444,1.155s-0.723,0.39-1.278,0.39c-0.183,0-0.378-0.019-0.588-0.055s-0.419-0.084-0.629-0.144 s-0.412-0.123-0.608-0.191s-0.357-0.139-0.485-0.212l-0.287,1.176c0.155,0.137,0.34,0.253,0.554,0.349s0.439,0.171,0.677,0.226 c0.237,0.055,0.472,0.094,0.704,0.116s0.458,0.034,0.677,0.034c0.511,0,0.966-0.077,1.367-0.232s0.738-0.362,1.012-0.622 s0.485-0.561,0.636-0.902s0.226-0.695,0.226-1.06c0-0.538-0.104-0.978-0.314-1.319S25.397,49.292,25.083,49.064z"/> <path d="M34.872,45.072c-0.378-0.429-0.82-0.754-1.326-0.978s-1.06-0.335-1.661-0.335s-1.155,0.111-1.661,0.335 s-0.948,0.549-1.326,0.978s-0.675,0.964-0.889,1.606s-0.321,1.388-0.321,2.235s0.107,1.595,0.321,2.242s0.511,1.185,0.889,1.613 s0.82,0.752,1.326,0.971s1.06,0.328,1.661,0.328s1.155-0.109,1.661-0.328s0.948-0.542,1.326-0.971s0.675-0.966,0.889-1.613 s0.321-1.395,0.321-2.242s-0.107-1.593-0.321-2.235S35.25,45.501,34.872,45.072z M34.195,50.698 c-0.137,0.487-0.326,0.882-0.567,1.183s-0.515,0.518-0.82,0.649s-0.627,0.198-0.964,0.198c-0.328,0-0.641-0.07-0.937-0.212 s-0.561-0.364-0.793-0.67s-0.415-0.699-0.547-1.183s-0.203-1.066-0.212-1.75c0.009-0.702,0.082-1.294,0.219-1.777 c0.137-0.483,0.326-0.877,0.567-1.183s0.515-0.521,0.82-0.649s0.627-0.191,0.964-0.191c0.328,0,0.641,0.068,0.937,0.205 s0.561,0.36,0.793,0.67s0.415,0.704,0.547,1.183s0.203,1.06,0.212,1.743C34.405,49.616,34.332,50.211,34.195,50.698z"/> <polygon points="44.012,50.869 40.061,43.924 38.393,43.924 38.393,54 40.061,54 40.061,47.055 44.012,54 45.68,54 45.68,43.924 44.012,43.924 "/> <path d="M20.5,20v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4c0,1.103-0.897,2-2,2 c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1s-0.447-1-1-1 c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C19.958,22.266,20.5,21.2,20.5,20z"/> <circle cx="28.5" cy="19.5" r="1.5"/> <path d="M28.5,25c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3C29.5,25.448,29.053,25,28.5,25z"/> </g> </svg>'; function waitForElm(e, t) { return new Promise((n => { if (e.querySelector(t)) return n(e.querySelector(t)); const s = new MutationObserver((i => { e.querySelector(t) && (n(e.querySelector(t)), s.disconnect()) })); s.observe(e.body, { childList: !0, subtree: !0 }) })) } $((function () { var e = document; loadHandler(e), window.addEventListener("popstate", (function (t) { loadHandler(e) })) })); const nullthrows = e => { if (null == e) throw new Error("it's a null"); return e }; function injectCode(e, t) { const n = document.createElement("script"); n.src = e, n.onload = function () { this.remove() }, nullthrows(t.head).appendChild(n) } var waiting = {}; async function loadHandler(e) { if (window.location.href.indexOf("logs-insights") > -1 || window.location.href.indexOf("log-groups") > -1) { if (waiting.micro) return; waiting.micro = await waitForElm(e, "#microConsole-Logs"), delete waiting.micro; var t = document.querySelector("#microConsole-Logs"), n = t.contentDocument, s = t.contentWindow, i = (n = s.document).getElementById("jsoneditor1"), a = n.getElementById("jsoneditor2"); if (waiting.main) return; if (waiting.main = await waitForElm(n, 'main[class="logs__main"]'), delete waiting.main, !i && !a) { await injectCode(chrome.runtime.getURL("/assets/js/jsoneditor.min.js"), n); var { editor1: i, editor2: a } = await createElements(n) } !n.getElementById("getjsonsGroups") && window.location.href.indexOf("log-groups") > -1 && !waiting.jsonsGroups && (waiting.jsonsGroups = Promise.all([waitForElm(n, 'button[class="awsui-button awsui-button-disabled awsui-button-variant-primary awsui-hover-child-icons"]')]).then((async e => { logsGroups(n, waitForElm, i, a), delete waiting.jsonsGroups }))), n.getElementById("geturls") && n.getElementById("getjsons") || !(window.location.href.indexOf("logs-insights") > -1) || waiting.urlsjsons || (waiting.urlsjsons = Promise.all([waitForElm(n, "#scroll-query-button > button")]).then((function (e) { logsInsights(n, waitForElm, i, a), delete waiting.urlsjsons }))) } } async function createElements(e) { var t = document.createElement("div"); t.className = "modal", t.id = "modal-json", t.style.display = "none", t.innerHTML = '\n        <awsui-modal initialized="true">\n            <div class="awsui-modal-tabtrap" tabindex="0"></div>\n            <div class="awsui-modal-container awsui-modal-expandtofit " role="dialog" aria-modal="true"\n                aria-labelledby="awsui-modal-0" >\n                <div class="awsui-modal-dialog awsui-modal-expandtofit awsui-modal-size-max" tabindex="-1" style="max-width: calc(100vw - 3rem) !important;">\n                    <div class="awsui-modal-content awsui-util-container">\n                        <div class="awsui-modal-header awsui-util-container-header">\n                            <div class="awsui-modal-title" id="awsui-modal-0">\n                                <div awsui-modal-region="header"><span>JSON Viewer</span></div>\n                            </div>\n                            <awsui-button class="awsui-modal-dismiss-control closeModal" initialized="true"><button\n                                    class="awsui-button awsui-button-no-text awsui-button-variant-icon awsui-hover-child-icons closeModal"\n                                    type="button" override-focus="">\n                                    <awsui-icon class="awsui-button-icon awsui-button-icon-left" initialized="true"><span\n                                            class="awsui-icon awsui-icon-size-normal awsui-icon-variant-normal"><svg\n                                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false"\n                                                aria-hidden="true">\n                                                <path d="M2 2l12 12M14 2L2 14"></path>\n                                            </svg></span></awsui-icon>\n                                </button></awsui-button>\n                        </div>\n                        <div class="awsui-modal-body awsui-modal-expandtofit">\n                            <div awsui-modal-region="content" id="contentJSON">\n                            <div id="jsoneditor1"></div>\n                            <div id="jsoneditor2"></div>\n                                \n                            </div>\n                        </div>\n                        <div class="awsui-modal-footer awsui-util-container-footer" awsui-modal-region="footer"><span><span\n                                    class="flex flex-end">\n                                    <awsui-button initialized="true" class="closeModal"><button\n                                            class="awsui-button awsui-button-variant-link awsui-hover-child-icons closeModal" type="submit"\n                                            override-focus="">\n                                            <span awsui-button-region="text" class="closeModal">\n                                                <span  class="closeModal">Cerrar</span>\n                                            </span>\n                                        </button>\n                                    </awsui-button>\n                                </span></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="awsui-modal-overlay closeModal"></div>\n            <div class="awsui-modal-tabtrap closeModal" tabindex="0"></div>\n        </awsui-modal>\n        '; var n = document.createElement("link"); n.rel = "stylesheet", n.href = "https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.7.4/jsoneditor.min.css", document.createElement("script").src = "https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.7.4/jsoneditor.min.js"; var s = document.createElement("style"); s.innerHTML = "\n\t\t\t\t\t\t\t\t#jsoneditor1,\n\t\t\t\t\t\t\t\t#jsoneditor2 {\n\t\t\t\t\t\t\t\twidth: 49%;\n\t\t\t\t\t\t\t\theight: 500px;\n\t\t\t\t\t\t\t\tmargin-right: 10px;\n\t\t\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\t\t\t}", e.head.appendChild(s), e.head.appendChild(n), e.querySelector('main[class= "logs__main"]').appendChild(t), e.querySelectorAll(".closeModal").forEach((t => { t.addEventListener("click", (function () { e.querySelector("#modal-json").style.display = "none" })) })); const i = new JSONEditor(e.getElementById("jsoneditor1"), { mode: "code", modes: ["code", "form", "text", "tree", "view", "preview"], onChangeText: function (e) { a.updateText(e) } }), a = new JSONEditor(e.getElementById("jsoneditor2"), { mode: "tree", modes: ["code", "form", "text", "tree", "view", "preview"], onChangeText: function (e) { i.updateText(e) } }); return { editor1: i, editor2: a } } async function logsGroups(e, t, n, s) { await t(e, 'div[class= "awsui-util-action-stripe-group"]'); e.body.children; var i = document.createElement("div"); i.className = "awsui-button  awsui-button-variant-primary awsui-hover-child-icons", i.id = "getjsonsGroups", i.innerHTML = `\n        <span awsui-button-region="text"><span><span class="awsui-icon awsui-icon-size-normal awsui-icon-variant-normal">\n            ${awsuiIconJSON}\n        </span>\n                `, e.querySelector('div[class="awsui-util-action-stripe-group"]').appendChild(i), e.querySelectorAll(".closeModal").forEach((t => { t.addEventListener("click", (function () { e.querySelector("#modal-json").style.display = "none" })) })), e.querySelector("#getjsonsGroups").addEventListener("click", (() => { e.querySelectorAll("div[class='logs__log-events-table__content']").forEach((t => { var i = t.innerText; try { var a; i.includes("{") && i.includes("}") && (a = i.includes("INFO EVENT:\t") ? i.includes("'") && RegExp("'[a-zA-Z0-9-_:.]*'").test(i) ? JSON.parse(i.split("INFO EVENT:\t")[1].replace(/"/g, '\\"').replace(/([{,])(\s*)([A-Za-z0-9_\-]+?)\s*:/g, '$1"$3":').replace(/'/g, '"').replace(RegExp("\\[Object\\]", "g"), '["ThisIsAnObject"]')) : JSON.parse(i.split("INFO EVENT:\t")[1]) : i.includes("INFO\t") && RegExp("'[a-zA-Z0-9-_:.]*'").test(i) ? i.includes("'") ? JSON.parse(i.split("INFO\t")[1].replace(/"/g, '\\"').replace(/([{,])(\s*)([A-Za-z0-9_\-]+?)\s*:/g, '$1"$3":').replace(/'/g, '"').replace(RegExp("\\[Object\\]", "g"), '["ThisIsAnObject"]')) : JSON.parse(i.split("INFO\t")[1]) : JSON.parse(i), t.addEventListener("click", (() => { n.set(a), s.set(a), s.expandAll(), e.getElementById("modal-json").style.display = "block" })), t.style.background = "#a22727", t.style.color = "white", t.style.cursor = "pointer") } catch (e) { } })) }), !1) } async function logsInsights(e, t, n, s) { await t(e, "#scroll-query-button > button"); e.body.children; var i = document.createElement("div"); i.className = "panel-menu-item is-not-selected", i.id = "geturls", i.innerHTML = `\n        <awsui-icon initialized="true">\n            <span class="awsui-icon awsui-icon-size-normal awsui-icon-variant-normal">\n                ${awsuiIconURL}\n            </span>\n        </awsui-icon>\n        <p>Get URL's</p>\n                `; var a = document.createElement("div"); a.className = "panel-menu-item is-not-selected", a.id = "getjsons", a.innerHTML = `\n        <awsui-icon initialized="true">\n            <span class="awsui-icon awsui-icon-size-normal awsui-icon-variant-normal">\n                ${awsuiIconJSON}\n            </span>\n        </awsui-icon>\n        <p>Get JSON's</p>\n                `, e.querySelector("#logs-micro-console__root > div > div > div > div > div.panel-menu").appendChild(i), e.querySelector("#logs-micro-console__root > div > div > div > div > div.panel-menu").appendChild(a), e.querySelector("#geturls").addEventListener("click", (() => { e.querySelectorAll("div[class='logs-insights-expanded-row']>table>tbody>tr").forEach((e => { var t, n, s, i = e.children[0].innerText, a = e.children[1].innerText, o = e.children[1], l = window.location.href.replace("https://", "").split(".")[0]; if (RegExp("^arn:aws:states:[a-zA-Z0-9-_]{1,}:[0-9]{12}:execution:[a-zA-Z0-9-_]{1,}:[a-zA-Z0-9-_]{1,}").test(a) && i.includes("execution_arn") && (t = "https://" + l + ".console.aws.amazon.com/states/home?region=" + l + "#/executions/details/" + a, o.innerHTML = '<a href="' + t + '" target="_blank">' + a + "</a>"), RegExp("d*:[a-zA-Z0-9-_]*").test(a) && i.includes("@log")) { var c; textLog = a.replace(/\d*:/, "").replaceAll("/", "$252F"), n = "https://" + l + ".console.aws.amazon.com/cloudwatch/home?region=" + l + "#logsV2:log-groups/log-group/" + textLog, o.innerHTML = '<a href="' + n + '" target="_blank">' + a + "</a>"; for (var r, d = e.parentNode.children.length, u = 0; u < d; u++)e.parentNode.children[u].innerText.includes("@logStream") && (r = (c = e.parentNode.children[u].children[1].innerText).replaceAll("/", "$252F"), s = "https://" + l + ".console.aws.amazon.com/cloudwatch/home?region=" + l + "#logsV2:log-groups/log-group/" + textLog + "/log-events/" + r, e.parentNode.children[u].children[1].innerHTML = '<a href="' + s + '" target="_blank">' + c + "</a>"), e.parentNode.children[u].innerText.includes("@timestamp") && (timestamp = e.parentNode.children[u].children[1].innerText, urllogStreamTimestamp = "https://" + l + ".console.aws.amazon.com/cloudwatch/home?region=" + l + "#logsV2:log-groups/log-group/" + textLog + "/log-events/" + r + "$3Fstart$3D" + timestamp + "$26end$3D" + (Number(timestamp) + 1), e.parentNode.children[u].children[1].innerHTML = '<a href="' + urllogStreamTimestamp + '" target="_blank">' + timestamp + "</a>") } })) }), !1), e.querySelector("#getjsons").addEventListener("click", (() => { e.querySelectorAll("div[class='logs-insights-expanded-row']>table>tbody>tr").forEach((t => { var i = t.children[0].innerText, a = t.children[1].innerText; if (i.includes("@message") || i.includes("Message")) try { var o; a.includes("{") && a.includes("}") && (o = a.includes("INFO EVENT: ") ? a.includes("'") && RegExp("'[a-zA-Z0-9-_:.]*'").test(a) ? JSON.parse(a.split("INFO EVENT: ")[1].replace(/"/g, '\\"').replace(/([{,])(\s*)([A-Za-z0-9_\-]+?)\s*:/g, '$1"$3":').replace(/'/g, '"').replace(RegExp("\\[Object\\]", "g"), '["ThisIsAnObject"]')) : JSON.parse(a.split("INFO EVENT: ")[1]) : a.includes("INFO ") && RegExp("'[a-zA-Z0-9-_:.]*'").test(a) ? a.includes("'") ? JSON.parse(a.split("INFO ")[1].replace(/"/g, '\\"').replace(/([{,])(\s*)([A-Za-z0-9_\-]+?)\s*:/g, '$1"$3":').replace(/'/g, '"').replace(RegExp("\\[Object\\]", "g"), '["ThisIsAnObject"]')) : JSON.parse(a.split("INFO ")[1]) : JSON.parse(a), t.addEventListener("click", (() => { n.set(o), s.set(o), s.expandAll(), e.getElementById("modal-json").style.display = "block" })), t.children[1].style.background = "#a22727", t.children[1].style.color = "white", t.children[1].style.cursor = "pointer") } catch (e) { } })) }), !1) }